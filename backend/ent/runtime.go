// Code generated by ent, DO NOT EDIT.

package ent

import (
	"example/ent/game"
	"example/ent/player"
	"example/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescName is the schema descriptor for name field.
	gameDescName := gameFields[0].Descriptor()
	// game.NameValidator is a validator for the "name" field. It is called by the builders before save.
	game.NameValidator = gameDescName.Validators[0].(func(string) error)
	playerFields := schema.Player{}.Fields()
	_ = playerFields
	// playerDescName is the schema descriptor for name field.
	playerDescName := playerFields[0].Descriptor()
	// player.NameValidator is a validator for the "name" field. It is called by the builders before save.
	player.NameValidator = playerDescName.Validators[0].(func(string) error)
	// playerDescScore is the schema descriptor for score field.
	playerDescScore := playerFields[2].Descriptor()
	// player.DefaultScore holds the default value on creation for the score field.
	player.DefaultScore = playerDescScore.Default.(int)
}
